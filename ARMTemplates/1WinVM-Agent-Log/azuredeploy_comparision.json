{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualNetworks_VNET_name": {
            "defaultValue": "VNET",
            "type": "String"
        },
        "virtualMachines_Server_name": {
            "defaultValue": "Server",
            "type": "String"
        },
        "networkInterfaces_Server_nic_name": {
            "defaultValue": "Server-nic",
            "type": "String"
        },
        "publicIPAddresses_Server_pip_name": {
            "defaultValue": "Server-pip",
            "type": "String"
        },
        "vaults_ARMTempUpdatea_1934_kv_name": {
            "defaultValue": "ARMTempUpdatea-1934-kv",
            "type": "String"
        },
        "networkSecurityGroups_VNET_nsg_name": {
            "defaultValue": "VNET-nsg",
            "type": "String"
        },
        "storageAccounts_rnstb4ijeeehkwi_name": {
            "defaultValue": "rnstb4ijeeehkwi",
            "type": "String"
        },
        "schedules_shutdown_computevm_server_name": {
            "defaultValue": "shutdown-computevm-server",
            "type": "String"
        },
        "workspaces_workspacename5849_name": {
            "defaultValue": "workspacename5849",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2016-10-01",
            "name": "[parameters('vaults_ARMTempUpdatea_1934_kv_name')]",
            "location": "East US",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "tenantId": "4f0566c5-7c80-40a4-b3e8-7cfcb6c423ff",
                "accessPolicies": [
                    {
                        "tenantId": "4f0566c5-7c80-40a4-b3e8-7cfcb6c423ff",
                        "objectId": "b3e8ea14-25d2-42b6-a8fa-029e33c768bc",
                        "permissions": {
                            "keys": [
                                "get",
                                "create",
                                "delete",
                                "list",
                                "update",
                                "import",
                                "backup",
                                "restore",
                                "recover"
                            ],
                            "secrets": [
                                "get",
                                "list",
                                "set",
                                "delete",
                                "backup",
                                "restore",
                                "recover"
                            ],
                            "certificates": [
                                "get",
                                "delete",
                                "list",
                                "create",
                                "import",
                                "update",
                                "deleteissuers",
                                "getissuers",
                                "listissuers",
                                "managecontacts",
                                "manageissuers",
                                "setissuers",
                                "recover",
                                "backup",
                                "restore"
                            ],
                            "storage": [
                                "delete",
                                "deletesas",
                                "get",
                                "getsas",
                                "list",
                                "listsas",
                                "regeneratekey",
                                "set",
                                "setsas",
                                "update",
                                "recover",
                                "backup",
                                "restore"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": true,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": true
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2018-12-01",
            "name": "[parameters('networkSecurityGroups_VNET_nsg_name')]",
            "location": "eastus",
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "153282c9-40fe-42d4-95da-f186d9cbedc8",
                "securityRules": [
                    {
                        "name": "Allow-RDP",
                        "etag": "W/\"7f164881-7350-4588-8e56-9123ca5b9fd2\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "144.121.36.154",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Allow-WinRM",
                        "etag": "W/\"7f164881-7350-4588-8e56-9123ca5b9fd2\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "5986",
                            "sourceAddressPrefix": "144.121.36.154",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "etag": "W/\"7f164881-7350-4588-8e56-9123ca5b9fd2\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                        "etag": "W/\"7f164881-7350-4588-8e56-9123ca5b9fd2\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "etag": "W/\"7f164881-7350-4588-8e56-9123ca5b9fd2\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "etag": "W/\"7f164881-7350-4588-8e56-9123ca5b9fd2\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "etag": "W/\"7f164881-7350-4588-8e56-9123ca5b9fd2\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "etag": "W/\"7f164881-7350-4588-8e56-9123ca5b9fd2\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2018-12-01",
            "name": "[parameters('publicIPAddresses_Server_pip_name')]",
            "location": "eastus",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "b03e0166-a7b4-4eaa-8513-5d1bce0a2b83",
                "ipAddress": "52.170.37.206",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "server2881",
                    "fqdn": "server2881.eastus.cloudapp.azure.com"
                },
                "ipTags": []
            }
        },
        {
            "type": "microsoft.operationalinsights/workspaces",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('workspaces_workspacename5849_name')]",
            "location": "eastus",
            "properties": {
                "source": "Azure",
                "customerId": "81d8e5b8-dc1d-4ade-9c8c-2f6a07892992",
                "portalUrl": "[concat('https://eus.mms.microsoft.com/Account?tenant=4f0566c5-7c80-40a4-b3e8-7cfcb6c423ff&resource=%2fsubscriptions%2f96105bd0-b016-4802-b122-3bd1d0215c0e%2fresourcegroups%2farmtempupdatea%2fproviders%2fmicrosoft.operationalinsights%2fworkspaces%2f', parameters('workspaces_workspacename5849_name'))]",
                "provisioningState": "Succeeded",
                "sku": {
                    "name": "pergb2018"
                },
                "retentionInDays": 30
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-07-01",
            "name": "[parameters('storageAccounts_rnstb4ijeeehkwi_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "microsoft.devtestlab/schedules",
            "apiVersion": "2016-05-15",
            "name": "[parameters('schedules_shutdown_computevm_server_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_Server_name'))]"
            ],
            "properties": {
                "status": "Enabled",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "1700"
                },
                "timeZoneId": "Eastern Standard Time",
                "notificationSettings": {
                    "status": "Disabled",
                    "timeInMinutes": 30
                },
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_Server_name'))]",
                "provisioningState": "Succeeded",
                "uniqueIdentifier": "04a48df5-7bd2-45ea-95df-722bdbd64883"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(parameters('vaults_ARMTempUpdatea_1934_kv_name'), '/ARMTempUpdatea-Secret')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_ARMTempUpdatea_1934_kv_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2018-12-01",
            "name": "[concat(parameters('networkSecurityGroups_VNET_nsg_name'), '/Allow-RDP')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_VNET_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "144.121.36.154",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2018-12-01",
            "name": "[concat(parameters('networkSecurityGroups_VNET_nsg_name'), '/Allow-WinRM')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_VNET_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "5986",
                "sourceAddressPrefix": "144.121.36.154",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 110,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2018-12-01",
            "name": "[parameters('virtualNetworks_VNET_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_VNET_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "3a7febda-a94f-4efe-b88d-20e3c2b96ce6",
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "Subnet",
                        "etag": "W/\"0e00eaf1-c2f3-424b-ad21-38cca58f88b6\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "10.0.0.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_VNET_nsg_name'))]"
                            },
                            "delegations": []
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_General|AlphabeticallySortedComputers')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "All Computers with their most recent data",
                "Category": "General Exploration",
                "Query": "search not(ObjectName == \"Advisor Metrics\" or ObjectName == \"ManagedSpace\") | summarize AggregatedValue = max(TimeGenerated) by Computer | limit 500000 | sort by Computer asc\r\n// Oql: NOT(ObjectName=\"Advisor Metrics\" OR ObjectName=ManagedSpace) | measure max(TimeGenerated) by Computer | top 500000 | Sort Computer // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_General|dataPointsPerManagementGroup')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Which Management Group is generating the most data points?",
                "Category": "General Exploration",
                "Query": "search * | summarize AggregatedValue = count() by ManagementGroupName\r\n// Oql: * | Measure count() by ManagementGroupName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_General|dataTypeDistribution')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Distribution of data Types",
                "Category": "General Exploration",
                "Query": "search * | extend Type = $table | summarize AggregatedValue = count() by Type\r\n// Oql: * | Measure count() by Type // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_General|StaleComputers')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Stale Computers (data older than 24 hours)",
                "Category": "General Exploration",
                "Query": "search not(ObjectName == \"Advisor Metrics\" or ObjectName == \"ManagedSpace\") | summarize lastdata = max(TimeGenerated) by Computer | limit 500000 | where lastdata < ago(24h)\r\n// Oql: NOT(ObjectName=\"Advisor Metrics\" OR ObjectName=ManagedSpace) | measure max(TimeGenerated) as lastdata by Computer | top 500000 | where lastdata < NOW-24HOURS // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|AllEvents')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "All Events",
                "Category": "Log Management",
                "Query": "Event | sort by TimeGenerated desc\r\n// Oql: Type=Event // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|AllSyslog')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "All Syslogs",
                "Category": "Log Management",
                "Query": "Syslog | sort by TimeGenerated desc\r\n// Oql: Type=Syslog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|AllSyslogByFacility')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "All Syslog Records grouped by Facility",
                "Category": "Log Management",
                "Query": "Syslog | summarize AggregatedValue = count() by Facility\r\n// Oql: Type=Syslog | Measure count() by Facility // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|AllSyslogByProcessName')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "All Syslog Records grouped by ProcessName",
                "Category": "Log Management",
                "Query": "Syslog | summarize AggregatedValue = count() by ProcessName\r\n// Oql: Type=Syslog | Measure count() by ProcessName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|AllSyslogsWithErrors')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "All Syslog Records with Errors",
                "Category": "Log Management",
                "Query": "Syslog | where SeverityLevel == \"error\" | sort by TimeGenerated desc\r\n// Oql: Type=Syslog SeverityLevel=error // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|AverageHTTPRequestTimeByClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Average HTTP Request time by Client IP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = avg(TimeTaken) by cIP\r\n// Oql: Type=W3CIISLog | Measure Avg(TimeTaken) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|AverageHTTPRequestTimeHTTPMethod')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Average HTTP Request time by HTTP Method",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = avg(TimeTaken) by csMethod\r\n// Oql: Type=W3CIISLog | Measure Avg(TimeTaken) by csMethod // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|CountIISLogEntriesClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of IIS Log Entries by Client IP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by cIP\r\n// Oql: Type=W3CIISLog | Measure count() by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|CountIISLogEntriesHTTPRequestMethod')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of IIS Log Entries by HTTP Request Method",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csMethod\r\n// Oql: Type=W3CIISLog | Measure count() by csMethod // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|CountIISLogEntriesHTTPUserAgent')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of IIS Log Entries by HTTP User Agent",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUserAgent\r\n// Oql: Type=W3CIISLog | Measure count() by csUserAgent // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|CountOfIISLogEntriesByHostRequestedByClient')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of IIS Log Entries by Host requested by client",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csHost\r\n// Oql: Type=W3CIISLog | Measure count() by csHost // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|CountOfIISLogEntriesByURLForHost')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of IIS Log Entries by URL for the host \"www.contoso.com\" (replace with your own)",
                "Category": "Log Management",
                "Query": "search csHost == \"www.contoso.com\" | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog csHost=\"www.contoso.com\" | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|CountOfIISLogEntriesByURLRequestedByClient')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of IIS Log Entries by URL requested by client (without query strings)",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|CountOfWarningEvents')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of Events with level \"Warning\" grouped by Event ID",
                "Category": "Log Management",
                "Query": "Event | where EventLevelName == \"warning\" | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event EventLevelName=warning | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|DisplayBreakdownRespondCodes')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Shows breakdown of response codes",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by scStatus\r\n// Oql: Type=W3CIISLog | Measure count() by scStatus // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|EventsByEventLog')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of Events grouped by Event Log",
                "Category": "Log Management",
                "Query": "Event | summarize AggregatedValue = count() by EventLog\r\n// Oql: Type=Event | Measure count() by EventLog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|EventsByEventsID')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of Events grouped by Event ID",
                "Category": "Log Management",
                "Query": "Event | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|EventsByEventSource')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of Events grouped by Event Source",
                "Category": "Log Management",
                "Query": "Event | summarize AggregatedValue = count() by Source\r\n// Oql: Type=Event | Measure count() by Source // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|EventsInOMBetween2000to3000')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Events in the Operations Manager Event Log whose Event ID is in the range between 2000 and 3000",
                "Category": "Log Management",
                "Query": "Event | where EventLog == \"Operations Manager\" and EventID >= 2000 and EventID <= 3000 | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLog=\"Operations Manager\" EventID:[2000..3000] // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|EventsWithStartedinEventID')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of Events containing the word \"started\" grouped by EventID",
                "Category": "Log Management",
                "Query": "search in (Event) \"started\" | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event \"started\" | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|FindMaximumTimeTakenForEachPage')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Find the maximum time taken for each page",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = max(TimeTaken) by csUriStem\r\n// Oql: Type=W3CIISLog | Measure Max(TimeTaken) by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|IISLogEntriesForClientIP')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "IIS Log Entries for a specific client IP Address (replace with your own)",
                "Category": "Log Management",
                "Query": "search cIP == \"192.168.0.1\" | extend Type = $table | where Type == W3CIISLog | sort by TimeGenerated desc | project csUriStem, scBytes, csBytes, TimeTaken, scStatus\r\n// Oql: Type=W3CIISLog cIP=\"192.168.0.1\" | Select csUriStem,scBytes,csBytes,TimeTaken,scStatus // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|ListAllIISLogEntries')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "All IIS Log Entries",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | sort by TimeGenerated desc\r\n// Oql: Type=W3CIISLog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|NoOfConnectionsToOMSDKService')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "How many connections to Operations Manager's SDK service by day",
                "Category": "Log Management",
                "Query": "Event | where EventID == 26328 and EventLog == \"Operations Manager\" | summarize AggregatedValue = count() by bin(TimeGenerated, 1d) | sort by TimeGenerated desc\r\n// Oql: Type=Event EventID=26328 EventLog=\"Operations Manager\" | Measure count() interval 1DAY // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|ServerRestartTime')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "When did my servers initiate restart?",
                "Category": "Log Management",
                "Query": "search in (Event) \"shutdown\" and EventLog == \"System\" and Source == \"User32\" and EventID == 1074 | sort by TimeGenerated desc | project TimeGenerated, Computer\r\n// Oql: shutdown Type=Event EventLog=System Source=User32 EventID=1074 | Select TimeGenerated,Computer // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|Show404PagesList')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Shows which pages people are getting a 404 for",
                "Category": "Log Management",
                "Query": "search scStatus == 404 | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog scStatus=404 | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|ShowServersThrowingInternalServerError')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Shows servers that are throwing internal server error",
                "Category": "Log Management",
                "Query": "search scStatus == 500 | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by sComputerName\r\n// Oql: Type=W3CIISLog scStatus=500 | Measure count() by sComputerName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|TotalBytesReceivedByEachAzureRoleInstance')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Total Bytes received by each Azure Role Instance",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by RoleInstance\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by RoleInstance // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|TotalBytesReceivedByEachIISComputer')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Total Bytes received by each IIS Computer",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by Computer | limit 500000\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by Computer | top 500000 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|TotalBytesRespondedToClientsByClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Total Bytes responded back to clients by Client IP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(scBytes) by cIP\r\n// Oql: Type=W3CIISLog | Measure Sum(scBytes) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|TotalBytesRespondedToClientsByEachIISServerIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Total Bytes responded back to clients by each IIS ServerIP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(scBytes) by sIP\r\n// Oql: Type=W3CIISLog | Measure Sum(scBytes) by sIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|TotalBytesSentByClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Total Bytes sent by Client IP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by cIP\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|WarningEvents')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "All Events with level \"Warning\"",
                "Category": "Log Management",
                "Query": "Event | where EventLevelName == \"warning\" | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLevelName=warning // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|WindowsFireawallPolicySettingsChanged')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "Windows Firewall Policy settings have changed",
                "Category": "Log Management",
                "Query": "Event | where EventLog == \"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" and EventID == 2008 | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLog=\"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" EventID=2008 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_workspacename5849_name'), '/LogManagement(', parameters('workspaces_workspacename5849_name'), ')_LogManagement|WindowsFireawallPolicySettingsChangedByMachines')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_workspacename5849_name'))]"
            ],
            "properties": {
                "DisplayName": "On which machines and how many times have Windows Firewall Policy settings changed",
                "Category": "Log Management",
                "Query": "Event | where EventLog == \"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" and EventID == 2008 | summarize AggregatedValue = count() by Computer | limit 500000\r\n// Oql: Type=Event EventLog=\"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" EventID=2008 | measure count() by Computer | top 500000 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-12-01",
            "name": "[parameters('networkInterfaces_Server_nic_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_Server_pip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNET_name'), 'Subnet')]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "cd154131-487b-44aa-b04d-e846f1e3afb8",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "etag": "W/\"807b2c07-68d0-42ef-a885-d47041d17364\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "10.0.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_Server_pip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VNET_name'), 'Subnet')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": [],
                    "internalDomainNameSuffix": "1lvx4ospvh5e3oenedr2folm2g.bx.internal.cloudapp.net"
                },
                "macAddress": "00-0D-3A-17-FC-C9",
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "primary": true,
                "tapConfigurations": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2018-12-01",
            "name": "[concat(parameters('virtualNetworks_VNET_name'), '/Subnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VNET_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_VNET_nsg_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "10.0.0.0/24",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_VNET_nsg_name'))]"
                },
                "delegations": []
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-10-01",
            "name": "[parameters('virtualMachines_Server_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_ARMTempUpdatea_1934_kv_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_Server_nic_name'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', parameters('storageAccounts_rnstb4ijeeehkwi_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_A2"
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_Server_name')]",
                    "adminUsername": "Gene",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "winRM": {
                            "listeners": [
                                {
                                    "protocol": "Http"
                                },
                                {
                                    "protocol": "Https",
                                    "certificateUrl": "https://armtempupdatea-1934-kv.vault.azure.net:443/secrets/ARMTempUpdatea-Secret/1db2a43ecf7c4abd9138250600420d34"
                                }
                            ]
                        }
                    },
                    "secrets": [
                        {
                            "sourceVault": {
                                "id": "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_ARMTempUpdatea_1934_kv_name'))]"
                            },
                            "vaultCertificates": [
                                {
                                    "certificateUrl": "https://armtempupdatea-1934-kv.vault.azure.net:443/secrets/ARMTempUpdatea-Secret/1db2a43ecf7c4abd9138250600420d34",
                                    "certificateStore": "My"
                                }
                            ]
                        }
                    ],
                    "allowExtensionOperations": true
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[concat('MicrosoftWindows', parameters('virtualMachines_Server_name'))]",
                        "offer": "[concat('Windows', parameters('virtualMachines_Server_name'))]",
                        "sku": "2019-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "osdisk",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', 'osdisk')]"
                        },
                        "diskSizeGB": 127
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_Server_nic_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('storageAccounts_rnstb4ijeeehkwi_name'), '.blob.core.windows.net/')]"
                    }
                }
            }
        }
    ]
}